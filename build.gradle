plugins {
    id 'java-base'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework:spring-context'
        implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        implementation 'javax.servlet.jsp.jstl:jstl-api:1.2'
        implementation "org.mapstruct:mapstruct:$mapstructVersion"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:$dataJpaVersion"

        testImplementation "com.tngtech.archunit:archunit-junit5:$archUnitVersion"
        testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
        testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.15'

        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'
        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
        testImplementation 'org.assertj:assertj-core:3.24.2'
    }
    test {
        useJUnitPlatform()
    }
}

task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}